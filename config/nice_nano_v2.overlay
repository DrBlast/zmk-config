#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    behaviors {
        ml: behavior_momentary_layer {
            compatible = "zmk,behavior-momentary-layer";
            #binding-cells = <1>;
        };
       ctrl_shift: behavior_macro_control_shift {
           compatible = "zmk,behavior-macro";
           #binding-cells = <0>;
           bindings
               = <&macro_press &kp LCTRL>
               , <&macro_wait_time 50>
               , <&macro_press &kp LSHFT>
               , <&macro_pause_for_release>
               , <&macro_release &kp LSHFT>
               , <&macro_release &kp LCTRL>;
       };
    };

    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    default_transform: keymap_transform {
        compatible = "zmk,matrix-transform";
        rows = <1>;
        columns = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-direct";
        label = "KSCAN";
        input-gpios
            = <&gpio0 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  // MB3
            , <&gpio1 13 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  // Ctrl+C
            , <&gpio0  9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  // Ctrl+V
            , <&gpio1 11 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  // Ctrl+Shift
            ;
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
                &mkp MB3        // middle click
                &kp LC(C)       // ctrl+c
                &kp LC(V)       // ctrl+v
                &ctrl_shift     // ctrl+shift
            >;
        };
    };
};